{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A D SARNITHA\\\\OneDrive\\\\Documents\\\\Project\\\\Prompt_Pad\\\\frontend\\\\src\\\\components\\\\Snippets.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pythonSnippets = [{\n  name: \"Hello World\",\n  code: 'print(\"Hello, World!\")'\n}, {\n  name: \"Input Example\",\n  code: 'name = input(\"Enter your name: \")\\nprint(\"Hi\", name)'\n}, {\n  name: \"For Loop\",\n  code: 'for i in range(5):\\n    print(i)'\n}];\nconst jsSnippets = [{\n  name: \"Hello World\",\n  code: 'console.log(\"Hello, World!\");'\n}, {\n  name: \"Prompt Example\",\n  code: 'let name = prompt(\"Enter your name: \");\\nconsole.log(\"Hi\", name);'\n}, {\n  name: \"For Loop\",\n  code: 'for (let i = 0; i < 5; i++) {\\n    console.log(i);\\n}'\n}];\nfunction Snippets({\n  setCode,\n  language\n}) {\n  const snippets = language === \"python\" ? pythonSnippets : jsSnippets;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"snippets\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Snippets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), snippets.map(s => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCode(s.code),\n      children: s.name\n    }, s.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = Snippets;\nexport default Snippets;\nvar _c;\n$RefreshReg$(_c, \"Snippets\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","pythonSnippets","name","code","jsSnippets","Snippets","setCode","language","snippets","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","s","onClick","_c","$RefreshReg$"],"sources":["C:/Users/A D SARNITHA/OneDrive/Documents/Project/Prompt_Pad/frontend/src/components/Snippets.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst pythonSnippets = [\r\n  { name: \"Hello World\", code: 'print(\"Hello, World!\")' },\r\n  { name: \"Input Example\", code: 'name = input(\"Enter your name: \")\\nprint(\"Hi\", name)' },\r\n  { name: \"For Loop\", code: 'for i in range(5):\\n    print(i)' },\r\n];\r\n\r\nconst jsSnippets = [\r\n  { name: \"Hello World\", code: 'console.log(\"Hello, World!\");' },\r\n  { name: \"Prompt Example\", code: 'let name = prompt(\"Enter your name: \");\\nconsole.log(\"Hi\", name);' },\r\n  { name: \"For Loop\", code: 'for (let i = 0; i < 5; i++) {\\n    console.log(i);\\n}' },\r\n];\r\n\r\nfunction Snippets({ setCode, language }) {\r\n  const snippets = language === \"python\" ? pythonSnippets : jsSnippets;\r\n  return (\r\n    <div className=\"snippets\">\r\n      <h3>Snippets</h3>\r\n      {snippets.map(s => (\r\n        <button key={s.name} onClick={() => setCode(s.code)}>{s.name}</button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Snippets;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAG,CACrB;EAAEC,IAAI,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAyB,CAAC,EACvD;EAAED,IAAI,EAAE,eAAe;EAAEC,IAAI,EAAE;AAAuD,CAAC,EACvF;EAAED,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAmC,CAAC,CAC/D;AAED,MAAMC,UAAU,GAAG,CACjB;EAAEF,IAAI,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAgC,CAAC,EAC9D;EAAED,IAAI,EAAE,gBAAgB;EAAEC,IAAI,EAAE;AAAoE,CAAC,EACrG;EAAED,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAwD,CAAC,CACpF;AAED,SAASE,QAAQA,CAAC;EAAEC,OAAO;EAAEC;AAAS,CAAC,EAAE;EACvC,MAAMC,QAAQ,GAAGD,QAAQ,KAAK,QAAQ,GAAGN,cAAc,GAAGG,UAAU;EACpE,oBACEJ,OAAA;IAAKS,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBV,OAAA;MAAAU,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBN,QAAQ,CAACO,GAAG,CAACC,CAAC,iBACbhB,OAAA;MAAqBiB,OAAO,EAAEA,CAAA,KAAMX,OAAO,CAACU,CAAC,CAACb,IAAI,CAAE;MAAAO,QAAA,EAAEM,CAAC,CAACd;IAAI,GAA/Cc,CAAC,CAACd,IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkD,CACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACI,EAAA,GAVQb,QAAQ;AAYjB,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}