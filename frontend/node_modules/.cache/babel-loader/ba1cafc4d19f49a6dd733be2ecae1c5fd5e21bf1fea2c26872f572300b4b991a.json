{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A D SARNITHA\\\\OneDrive\\\\Documents\\\\Project\\\\Prompt_Pad\\\\frontend\\\\src\\\\components\\\\Snippets.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pythonSnippets = [{\n  name: \"Hello World\",\n  code: 'print(\"Hello, World!\")'\n}, {\n  name: \"Input Example\",\n  code: 'name = input(\"Enter your name: \")\\nprint(\"Hi\", name)'\n}, {\n  name: \"For Loop\",\n  code: 'for i in range(5):\\n    print(i)'\n}];\nconst jsSnippets = [{\n  name: \"Hello World\",\n  code: 'console.log(\"Hello, World!\");'\n}, {\n  name: \"Prompt Example\",\n  code: 'let name = prompt(\"Enter your name: \");\\nconsole.log(\"Hi\", name);'\n}, {\n  name: \"For Loop\",\n  code: 'for (let i = 0; i < 5; i++) {\\n    console.log(i);\\n}'\n}];\nconst cSnippets = [{\n  name: \"Hello World\",\n  code: '#include <stdio.h>\\nint main() {\\n    printf(\"Hello, World!\\\\n\");\\n    return 0;\\n}'\n}, {\n  name: \"Input Example\",\n  code: '#include <stdio.h>\\nint main() {\\n    char name[100];\\n    printf(\"Enter your name: \");\\n    scanf(\"%99s\", name);\\n    printf(\"Hi %s\\\\n\", name);\\n    return 0;\\n}'\n}, {\n  name: \"For Loop\",\n  code: '#include <stdio.h>\\nint main() {\\n    for(int i = 0; i < 5; i++) {\\n        printf(\"%d\\\\n\", i);\\n    }\\n    return 0;\\n}'\n}];\nconst cppSnippets = [{\n  name: \"Hello World\",\n  code: '#include <iostream>\\nint main() {\\n    std::cout << \"Hello, World!\" << std::endl;\\n    return 0;\\n}'\n}, {\n  name: \"Input Example\",\n  code: '#include <iostream>\\n#include <string>\\nint main() {\\n    std::string name;\\n    std::cout << \"Enter your name: \";\\n    std::cin >> name;\\n    std::cout << \"Hi \" << name << std::endl;\\n    return 0;\\n}'\n}, {\n  name: \"For Loop\",\n  code: '#include <iostream>\\nint main() {\\n    for(int i = 0; i < 5; i++) {\\n        std::cout << i << std::endl;\\n    }\\n    return 0;\\n}'\n}];\nconst javaSnippets = [{\n  name: \"Hello World\",\n  code: 'public class Main {\\n    public static void main(String[] args) {\\n        System.out.println(\"Hello, World!\");\\n    }\\n}'\n}, {\n  name: \"Input Example\",\n  code: 'import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        System.out.print(\"Enter your name: \");\\n        String name = sc.nextLine();\\n        System.out.println(\"Hi \" + name);\\n    }\\n}'\n}, {\n  name: \"For Loop\",\n  code: 'public class Main {\\n    public static void main(String[] args) {\\n        for(int i = 0; i < 5; i++) {\\n            System.out.println(i);\\n        }\\n    }\\n}'\n}];\nconst csharpSnippets = [{\n  name: \"Hello World\",\n  code: 'using System;\\nclass Program {\\n    static void Main(string[] args) {\\n        Console.WriteLine(\"Hello, World!\");\\n    }\\n}'\n}, {\n  name: \"Input Example\",\n  code: 'using System;\\nclass Program {\\n    static void Main(string[] args) {\\n        Console.Write(\"Enter your name: \");\\n        string name = Console.ReadLine();\\n        Console.WriteLine(\"Hi \" + name);\\n    }\\n}'\n}, {\n  name: \"For Loop\",\n  code: 'using System;\\nclass Program {\\n    static void Main(string[] args) {\\n        for(int i = 0; i < 5; i++) {\\n            Console.WriteLine(i);\\n        }\\n    }\\n}'\n}];\nconst SNIPPETS = {\n  python: pythonSnippets,\n  javascript: jsSnippets,\n  c: cSnippets,\n  cpp: cppSnippets,\n  java: javaSnippets,\n  csharp: csharpSnippets\n};\nfunction Snippets({\n  setCode,\n  language\n}) {\n  const snippets = SNIPPETS[language] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"snippets\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Snippets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), snippets.map(s => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCode(s.code),\n      children: s.name\n    }, s.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c = Snippets;\nexport default Snippets;\nvar _c;\n$RefreshReg$(_c, \"Snippets\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","pythonSnippets","name","code","jsSnippets","cSnippets","cppSnippets","javaSnippets","csharpSnippets","SNIPPETS","python","javascript","c","cpp","java","csharp","Snippets","setCode","language","snippets","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","s","onClick","_c","$RefreshReg$"],"sources":["C:/Users/A D SARNITHA/OneDrive/Documents/Project/Prompt_Pad/frontend/src/components/Snippets.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst pythonSnippets = [\r\n  { name: \"Hello World\", code: 'print(\"Hello, World!\")' },\r\n  { name: \"Input Example\", code: 'name = input(\"Enter your name: \")\\nprint(\"Hi\", name)' },\r\n  { name: \"For Loop\", code: 'for i in range(5):\\n    print(i)' },\r\n];\r\n\r\nconst jsSnippets = [\r\n  { name: \"Hello World\", code: 'console.log(\"Hello, World!\");' },\r\n  { name: \"Prompt Example\", code: 'let name = prompt(\"Enter your name: \");\\nconsole.log(\"Hi\", name);' },\r\n  { name: \"For Loop\", code: 'for (let i = 0; i < 5; i++) {\\n    console.log(i);\\n}' },\r\n];\r\n\r\nconst cSnippets = [\r\n  { name: \"Hello World\", code: '#include <stdio.h>\\nint main() {\\n    printf(\"Hello, World!\\\\n\");\\n    return 0;\\n}' },\r\n  { name: \"Input Example\", code: '#include <stdio.h>\\nint main() {\\n    char name[100];\\n    printf(\"Enter your name: \");\\n    scanf(\"%99s\", name);\\n    printf(\"Hi %s\\\\n\", name);\\n    return 0;\\n}' },\r\n  { name: \"For Loop\", code: '#include <stdio.h>\\nint main() {\\n    for(int i = 0; i < 5; i++) {\\n        printf(\"%d\\\\n\", i);\\n    }\\n    return 0;\\n}' },\r\n];\r\n\r\nconst cppSnippets = [\r\n  { name: \"Hello World\", code: '#include <iostream>\\nint main() {\\n    std::cout << \"Hello, World!\" << std::endl;\\n    return 0;\\n}' },\r\n  { name: \"Input Example\", code: '#include <iostream>\\n#include <string>\\nint main() {\\n    std::string name;\\n    std::cout << \"Enter your name: \";\\n    std::cin >> name;\\n    std::cout << \"Hi \" << name << std::endl;\\n    return 0;\\n}' },\r\n  { name: \"For Loop\", code: '#include <iostream>\\nint main() {\\n    for(int i = 0; i < 5; i++) {\\n        std::cout << i << std::endl;\\n    }\\n    return 0;\\n}' },\r\n];\r\n\r\nconst javaSnippets = [\r\n  { name: \"Hello World\", code: 'public class Main {\\n    public static void main(String[] args) {\\n        System.out.println(\"Hello, World!\");\\n    }\\n}' },\r\n  { name: \"Input Example\", code: 'import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        System.out.print(\"Enter your name: \");\\n        String name = sc.nextLine();\\n        System.out.println(\"Hi \" + name);\\n    }\\n}' },\r\n  { name: \"For Loop\", code: 'public class Main {\\n    public static void main(String[] args) {\\n        for(int i = 0; i < 5; i++) {\\n            System.out.println(i);\\n        }\\n    }\\n}' },\r\n];\r\n\r\nconst csharpSnippets = [\r\n  { name: \"Hello World\", code: 'using System;\\nclass Program {\\n    static void Main(string[] args) {\\n        Console.WriteLine(\"Hello, World!\");\\n    }\\n}' },\r\n  { name: \"Input Example\", code: 'using System;\\nclass Program {\\n    static void Main(string[] args) {\\n        Console.Write(\"Enter your name: \");\\n        string name = Console.ReadLine();\\n        Console.WriteLine(\"Hi \" + name);\\n    }\\n}' },\r\n  { name: \"For Loop\", code: 'using System;\\nclass Program {\\n    static void Main(string[] args) {\\n        for(int i = 0; i < 5; i++) {\\n            Console.WriteLine(i);\\n        }\\n    }\\n}' },\r\n];\r\n\r\nconst SNIPPETS = {\r\n  python: pythonSnippets,\r\n  javascript: jsSnippets,\r\n  c: cSnippets,\r\n  cpp: cppSnippets,\r\n  java: javaSnippets,\r\n  csharp: csharpSnippets,\r\n};\r\n\r\nfunction Snippets({ setCode, language }) {\r\n  const snippets = SNIPPETS[language] || [];\r\n  return (\r\n    <div className=\"snippets\">\r\n      <h3>Snippets</h3>\r\n      {snippets.map(s => (\r\n        <button key={s.name} onClick={() => setCode(s.code)}>{s.name}</button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Snippets;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAG,CACrB;EAAEC,IAAI,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAyB,CAAC,EACvD;EAAED,IAAI,EAAE,eAAe;EAAEC,IAAI,EAAE;AAAuD,CAAC,EACvF;EAAED,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAmC,CAAC,CAC/D;AAED,MAAMC,UAAU,GAAG,CACjB;EAAEF,IAAI,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAgC,CAAC,EAC9D;EAAED,IAAI,EAAE,gBAAgB;EAAEC,IAAI,EAAE;AAAoE,CAAC,EACrG;EAAED,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAwD,CAAC,CACpF;AAED,MAAME,SAAS,GAAG,CAChB;EAAEH,IAAI,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAsF,CAAC,EACpH;EAAED,IAAI,EAAE,eAAe;EAAEC,IAAI,EAAE;AAAqK,CAAC,EACrM;EAAED,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE;AAA2H,CAAC,CACvJ;AAED,MAAMG,WAAW,GAAG,CAClB;EAAEJ,IAAI,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAsG,CAAC,EACpI;EAAED,IAAI,EAAE,eAAe;EAAEC,IAAI,EAAE;AAA4M,CAAC,EAC5O;EAAED,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAqI,CAAC,CACjK;AAED,MAAMI,YAAY,GAAG,CACnB;EAAEL,IAAI,EAAE,aAAa;EAAEC,IAAI,EAAE;AAA4H,CAAC,EAC1J;EAAED,IAAI,EAAE,eAAe;EAAEC,IAAI,EAAE;AAAwR,CAAC,EACxT;EAAED,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAmK,CAAC,CAC/L;AAED,MAAMK,cAAc,GAAG,CACrB;EAAEN,IAAI,EAAE,aAAa;EAAEC,IAAI,EAAE;AAA+H,CAAC,EAC7J;EAAED,IAAI,EAAE,eAAe;EAAEC,IAAI,EAAE;AAAoN,CAAC,EACpP;EAAED,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAsK,CAAC,CAClM;AAED,MAAMM,QAAQ,GAAG;EACfC,MAAM,EAAET,cAAc;EACtBU,UAAU,EAAEP,UAAU;EACtBQ,CAAC,EAAEP,SAAS;EACZQ,GAAG,EAAEP,WAAW;EAChBQ,IAAI,EAAEP,YAAY;EAClBQ,MAAM,EAAEP;AACV,CAAC;AAED,SAASQ,QAAQA,CAAC;EAAEC,OAAO;EAAEC;AAAS,CAAC,EAAE;EACvC,MAAMC,QAAQ,GAAGV,QAAQ,CAACS,QAAQ,CAAC,IAAI,EAAE;EACzC,oBACElB,OAAA;IAAKoB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBrB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBN,QAAQ,CAACO,GAAG,CAACC,CAAC,iBACb3B,OAAA;MAAqB4B,OAAO,EAAEA,CAAA,KAAMX,OAAO,CAACU,CAAC,CAACxB,IAAI,CAAE;MAAAkB,QAAA,EAAEM,CAAC,CAACzB;IAAI,GAA/CyB,CAAC,CAACzB,IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkD,CACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACI,EAAA,GAVQb,QAAQ;AAYjB,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}